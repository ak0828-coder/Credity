name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.x (with pnpm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Enable corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.15.9 --activate
          pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint (all workspaces)
        run: pnpm -r lint

      - name: Test (all workspaces)
        run: pnpm -r test

      - name: Build (all workspaces)
        run: pnpm -r build

      # --- Artefakte packen ---
      - name: Pack frontend build
        if: always()
        run: |
          if [ -d "apps/frontend/.next" ]; then tar -czf frontend-next-build.tgz -C apps/frontend .next; fi

      - name: Pack backend build
        if: always()
        run: |
          if [ -d "apps/backend/dist" ]; then tar -czf backend-dist.tgz -C apps/backend dist; fi

      # --- SBOM (CycloneDX) erzeugen ---
      - name: Generate SBOM (CycloneDX)
        run: npx @cyclonedx/cyclonedx-npm --spec-version 1.5 --output-file bom.json

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend-next-build.tgz
            backend-dist.tgz
            bom.json
          if-no-files-found: ignore